# kafka producer configurations
#spring.kafka.producer.bootstrap-servers: localhost:9092
#spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
# to send complete json object of class - we can use ValueSerializer from spring/java
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

# kafka consumer configurations
#spring.kafka.consumer.bootstrap-servers: localhost:9092
#spring.kafka.consumer.group-id: myGroup
#spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
# to receive complete json object of class - we can use ValueDeserializer from spring/java
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# database configurations
spring.datasource.jdbcUrl=jdbc:postgresql://0.0.0.0:5432/sampledb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# liquibase configurations
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true